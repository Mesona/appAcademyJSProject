{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/battleView/battleView.js","webpack:///./src/battleView/distanceBar.js","webpack:///./src/battleView/healthBar.js","webpack:///./src/battleView/moveCreature.js","webpack:///./src/game.js","webpack:///./src/index.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,kBAAkB,mBAAO,CAAC,kDAAa;AACvC,oBAAoB,mBAAO,CAAC,sDAAe;AAC3C,sBAAsB,mBAAO,CAAC,wDAAgB;;AAE9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,IAAI;;AAEJ;AACA;AACA;AACA;AACA;;;AAGA,4B;;;;;;;;;;;;AC9CA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;;AC1BA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;;;;;;;AC7BA;AACA;AACA;AACA;;AAEA,kD;;AAEA;AACA,0B;AACA,+C;AACA;AACA,2E;AACA,GAAG;AACH,0E;AACA;AACA;;AAEA;AACA,yB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,+B;;;;;;;;;;;ACnCA,mBAAmB,mBAAO,CAAC,+DAAyB;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B,sBAAsB;AACtB;AACA;AACA;;AAEA,sB;;;;;;;;;;;ACfA;;AAEA;AACA;AACA;;AAEA;;;;AAIA;;AAEA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA,2C;AACA;AACA;AACA;AACA;AACA;AACA,oC;AACA,wD;AACA,iB;AACA,MAAM,I;;AAEN,e;AACA;AACA,wB;AACA;AACA;;;;;AAKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,uD;AACA,+B;AACA,mC;AACA,0BAA0B;AAC1B,iD;AACA,QAAQ;AACR,iD;AACA,QAAQ;AACR,gD;AACA;AACA,8B;AACA;AACA,0BAA0B;AAC1B;AACA,QAAQ;AACR;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,M;;;AAGA,qC;;AAEA,CAAC;;AAED","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const HealthBar = require('./healthBar');\nconst DistanceBar = require('./distanceBar');\nconst MoveCreatures = require('./moveCreature');\n\nfunction BattleView(ctx, canvas) {\n  // function BattleView(game, ctx, playerCreature, enemyCreature) {\n  this.ctx = ctx;\n  this.canvas = canvas\n  // this.game = game;\n  // this.playerCreature = playerCreature;\n  // this.enemyCreature = enemyCreature;\n  // this.drawHealth(this.ctx);\n  this.animationId = '';\n}\n\nBattleView.prototype.start = function start() {\n  this.lastTime = 0;\n  console.log(\"STARTED\")\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nBattleView.prototype.animate = function animate(time) {\n  const timeDelta = time - this.lastTime;\n  \n\n  this.step(timeDelta);\n  this.lastTime = time;\n\n  // console.log(\"ANIMATE\")\n  // console.log(timeDelta)\n  // console.log(time)\n\n  this.animationId = requestAnimationFrame(this.animate.bind(this));\n};\n\n// const body = document.getElementsByClassName('body');\n// body.addEventListener('click', () => {\n//   cancelAnimationFrame(this.animationId);\n// });\n\nBattleView.prototype.step = function step(timeDelta) {\n  DistanceBar(this.ctx, this.canvas);\n  HealthBar(this.ctx, this.canvas, timeDelta);\n  MoveCreatures(this.ctx, this.canvas, timeDelta);\n}\n\n\nmodule.exports = BattleView;","\nfunction DistanceBar(ctx, canvas) {\n  let playerCreature = JSON.parse(localStorage.getItem('playerCreature'));\n  let aiCreature = JSON.parse(localStorage.getItem('aiCreature'));\n\n  // distance bar\n  ctx.clearRect(0, 0, canvas.width, 50);\n  ctx.strokeStyle = \"purple\";\n  ctx.beginPath();\n  ctx.moveTo(20,20);\n  ctx.lineTo(780,20);\n  ctx.stroke();\n\n  // animate creatures on distance bar\n  ctx.beginPath();\n  ctx.arc(playerCreature.pos + 80, 20, 10, 0, 2*Math.PI, true);\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.arc(aiCreature.pos + 20, 20, 10, 0, 2*Math.PI, true);\n  ctx.fill();\n\n  // Save creature state\n  localStorage.setItem('playerCreature', JSON.stringify(playerCreature));\n  localStorage.setItem('aiCreature', JSON.stringify(aiCreature));\n}\n\nmodule.exports = DistanceBar;","\nfunction HealthBar(ctx) {\n\n  // draw(ctx) {\n    // if (creature.owner === \"AI\") {\n    //   this.ctx.strokeStyle = \"red\";\n    //   this.ctx.strokeRect(530, 70, 250, 30);\n    //   this.ctx.fillStyle = \"red\";\n    //   this.ctx.fillRect(530, 70, (250 - (250 * this.percentHealth)), 30);\n    // } else {\n    //   pos = 20 + (250 - (250 * this.percentHealth));\n    //   this.ctx.strokeStyle = \"red\";\n    //   this.ctx.strokeRect(20, 70, 250, 30);\n    //   this.ctx.fillStyle = \"red\";\n    //   this.ctx.fillRect(pos, 70, (270 - pos), 30);\n    // }\n  // }\n\n  ctx.strokeStyle = \"red\";\n  ctx.strokeRect(20, 70, 250, 30);\n  ctx.fillStyle = \"red\";\n  ctx.fillRect(20, 70, 250, 30);\n\n  // opposing creature's health\n  ctx.strokeStyle = \"red\";\n  ctx.strokeRect(530, 70, 250, 30);\n  ctx.fillStyle = \"red\";\n  ctx.fillRect(530, 70, 250, 30);\n}\n\nmodule.exports = HealthBar;","\nfunction MoveCreatures(ctx, canvas, timeDelta) {\n  let playerCreature = JSON.parse(localStorage.getItem('playerCreature'));\n  let aiCreature = JSON.parse(localStorage.getItem('aiCreature'));\n  let timeScale = timeDelta / NORMAL_FRAME_TIME_DELTA;\n\n  ctx.clearRect(0,100,canvas.width,canvas.height);  \n\n  // Draw player creature\n  ctx.fillStyle = \"green\"; \n  ctx.fillRect(playerCreature.pos,250,100,200); \n  if (playerCreature.pos + 100 >= aiCreature.pos){\n    playerCreature.pos+=(Math.floor((Math.random() * 10) -10) * timeScale); \n  } else {\n    playerCreature.pos+=(Math.floor((Math.random() * 10) -4) * timeScale); \n    playerCreature.pos = Math.min(Math.max(playerCreature.pos, 0));\n  }\n\n  // Draw opposing creature\n  ctx.fillStyle = \"blue\"; \n  ctx.fillRect(aiCreature.pos, 250, 100, 200);\n  if (aiCreature.pos <= playerCreature.pos + 100) {\n    aiCreature.pos-=(Math.floor((Math.random() * 10) -10) * timeScale);\n    aiCreature.pos = Math.min(Math.max(aiCreature.pos, 0), 700);\n  } else {\n    aiCreature.pos-=(Math.floor((Math.random() * 10) -4) * timeScale);\n  }\n\n  // Save new creature state\n  localStorage.setItem('playerCreature', JSON.stringify(playerCreature));\n  localStorage.setItem('aiCreature', JSON.stringify(aiCreature));\n}\n\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\nmodule.exports = MoveCreatures;","const BattleView = require(\"./battleView/battleView\");\n\nfunction Game(ctx, canvas) {\n    this.creature = [];\n    this.weapon = [];\n    this.armor = [];\n    this.ctx = ctx;\n\n    new BattleView(ctx, canvas).start();\n    let playerCreature = {pos: 0, currentHealth: 100, maxHealth: 100}\n    let aiCreature = {pos: 700, currentHealth: 100, maxHealth: 100}\n    localStorage.setItem('playerCreature', JSON.stringify(playerCreature));\n    localStorage.setItem('aiCreature', JSON.stringify(aiCreature));\n  }\n\nmodule.exports = Game;","// import _ from 'lodash';\n\n// function component() {\n//   // let element = document.createElement('div');\n//   // element.innerHTML = _.join(['Hello', 'webpack'], ' ');\n\n//   // return element;\n\n\n  \n// }\n\nconst Game = require(\"./game\");\n// const GameView = require('./gameView');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementById(\"myCanvas\");\n  canvas.width = 800;\n  canvas.height = 500;\n\n  const ctx = canvas.getContext(\"2d\");\n  new Game(ctx, canvas);\n  // new GameView(game, ctx).start();\n\n\n  // // shim layer with setTimeout fallback \n  // window.requestAnimFrame = (function(){ \n  //   return  window.requestAnimationFrame       ||  \n  //           window.webkitRequestAnimationFrame ||  \n  //           window.mozRequestAnimationFrame    ||  \n  //           window.oRequestAnimationFrame      ||  \n  //           window.msRequestAnimationFrame     ||  \n  //           function( callback ){ \n  //             window.setTimeout(callback, 1000 / 60); \n  //           }; \n  // })(); \n\n  // let x = 0; \n  // let y = 800;\n  // function drawIt() { \n  //   window.requestAnimFrame(drawIt);\n  //   // new BattleView(game, ctx).start();\n\n   \n\n\n  //   // player's creature's health\n  //   ctx.strokeStyle = \"red\";\n  //   ctx.strokeRect(20, 70, 250, 30);\n  //   ctx.fillStyle = \"red\";\n  //   ctx.fillRect(20, 70, 250, 30);\n\n  //   // opposing creature's health\n  //   ctx.strokeStyle = \"red\";\n  //   ctx.strokeRect(530, 70, 250, 30);\n  //   ctx.fillStyle = \"red\";\n  //   ctx.fillRect(530, 70, 250, 30);\n\n  //   ctx.clearRect(0,100,canvas.width,canvas.height);  \n  //   ctx.fillStyle = \"green\"; \n  //   ctx.fillRect(x,250,100,200); \n  //   if (x + 100 >= y) { // If the blocks are touching\n  //     x+=Math.floor((Math.random() * 10) -10); \n  //   } else if (x + 210 >= 800) {\n  //     x+=Math.floor((Math.random() * 10) -10); \n  //   } else {\n  //     x+=Math.floor((Math.random() * 10) -4); \n  //   }\n  //   ctx.fillStyle = \"blue\"; \n  //   ctx.fillRect(y, 250, 100, 200);\n  //   if (y <= x + 100) { // If the blocks are touching\n  //     y-=Math.floor((Math.random() * 10) -10);\n  //   } else if (y - 210 <= 0) {\n  //     y-=Math.floor((Math.random() * 10) -10);\n  //   } else {\n  //     y-=Math.floor((Math.random() * 10) -4);\n  //   }\n  //   // distance bar\n  //   ctx.clearRect(0, 0, canvas.width, 50);\n  //   ctx.strokeStyle = \"purple\";\n  //   ctx.beginPath();\n  //   ctx.moveTo(20,20);\n  //   ctx.lineTo(780,20);\n  //   ctx.stroke();\n  \n  //   // animate creature spot on distance bar\n  //   ctx.beginPath();\n  //   ctx.arc(x + 30, 20, 10, 0, 2*Math.PI, true);\n  //   ctx.fill();\n  \n  //   ctx.beginPath();\n  //   ctx.arc(y - 30, 20, 10, 0, 2*Math.PI, true);\n  //   ctx.fill();\n  // } \n\n\n  // window.requestAnimFrame(drawIt); \n\n});\n\n// document.body.appendChild(component());\n"],"sourceRoot":""}