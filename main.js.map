{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/battleView/battleView.js","webpack:///./src/battleView/combat.js","webpack:///./src/battleView/distanceBar.js","webpack:///./src/battleView/healthBar.js","webpack:///./src/battleView/moveCreature.js","webpack:///./src/creature.js","webpack:///./src/game.js","webpack:///./src/gameView.js","webpack:///./src/index.js","webpack:///./src/preparationView/armor.js","webpack:///./src/preparationView/creatureBox.js","webpack:///./src/preparationView/descriptionBox.js","webpack:///./src/preparationView/equipBox.js","webpack:///./src/preparationView/equipment.js","webpack:///./src/preparationView/preparationView.js","webpack:///./src/preparationView/weapon.js","webpack:///./src/tutorialView.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;AClFA,kBAAkB,mBAAO,CAAC,kDAAa;AACvC,oBAAoB,mBAAO,CAAC,sDAAe;AAC3C,sBAAsB,mBAAO,CAAC,wDAAgB;AAC9C,cAAc,mBAAO,CAAC,4CAAU;;AAEhC;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,iD;AACA;;AAEA;AACA;;;AAGA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;AACH,sE;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,+CAA+C;AAC/C;AACA;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;;;AAIA,4B;;;;;;;;;;;ACtGA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA,wB;;;;;;;;;;;ACtDA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,6B;;;;;;;;;;;ACxBA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2B;;;;;;;;;;;ACzBA;AACA;AACA;;AAEA;AACA,6D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kD;;AAEA;AACA;AACA;AACA;;AAEA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8H;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA,2D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;;;AAIA;;AAEA,+B;;;;;;;;;;;AC3HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,uCAAuC;AAC/C,QAAQ,yCAAyC;AACjD,QAAQ,wCAAwC;AAChD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;;;AAIA,2B;;;;;;;;;;;ACjGA,iBAAiB,mBAAO,CAAC,qCAAY;AACrC,kBAAkB,mBAAO,CAAC,uEAA6B;;AAEvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,qBAAqB,iCAAiC;AACtD,sBAAsB,+BAA+B;AACrD,mBAAmB,+BAA+B;AAClD;;AAEA;AACA,mBAAmB,wBAAwB;AAC3C,mBAAmB,wBAAwB;AAC3C,mBAAmB,wBAAwB;AAC3C;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sB;;;;;;;;;;;AC9GA,wBAAwB,mBAAO,CAAC,mFAAmC;AACnE,mBAAmB,mBAAO,CAAC,+DAAyB;;AAEpD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,0B;;;;;;;;;;;AC3CA,aAAa,mBAAO,CAAC,6BAAQ;AAC7B,qBAAqB,mBAAO,CAAC,6CAAgB;AAC7C;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kD;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;;AAEV;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA,uB;;;;;;;;;;;AC3DA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA,6D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,6BAA6B,0CAA0C;;AAEvE;AACA;AACA;AACA;;;;;AAKA,6B;;;;;;;;;;;ACrDA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA,gC;;;;;;;;;;;ACphJA,eAAe,mBAAO,CAAC,iDAAU;AACjC,cAAc,mBAAO,CAAC,+CAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,gDAAgD,uBAAuB;AACvE;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA,2B;;;;;;;;;;;ACjEA,iBAAiB,mBAAO,CAAC,qDAAY;AACrC,oBAAoB,mBAAO,CAAC,2DAAe;AAC3C,uBAAuB,mBAAO,CAAC,iEAAkB;;AAEjD;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,OAAO,IAAI,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G;AACA;;AAEA;AACA;AACA;AACA,oBAAoB,OAAO,IAAI,OAAO;;AAEtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,K;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA,oE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA,iC;;;;;;;;;;;AClLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;AAIA,wB;;;;;;;;;;;ACjEA,wBAAwB,mBAAO,CAAC,mFAAmC;AACnE,iBAAiB,mBAAO,CAAC,qCAAY;;AAErC;AACA;AACA;AACA;;AAEA;;AAEA;AACA,oE;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,wB;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+E;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,8B","file":"main.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","const HealthBar = require('./healthBar');\nconst DistanceBar = require('./distanceBar');\nconst MoveCreatures = require('./moveCreature');\nconst Combat= require('./combat');\n\nfunction BattleView(game, ctx, canvas, gameView) {\n  this.game = game;\n  this.canvas = canvas;\n  this.ctx = ctx;\n  this.gameView = gameView;\n  this.animationId = 0;\n}\n\nBattleView.prototype.start = function start() {\n  this.lastTime = 0;\n  requestAnimationFrame(this.animate.bind(this)); \n};\n\nBattleView.prototype.animate = function animate(time) {\n  const timeDelta = time - this.lastTime;\n  \n\n  this.step(timeDelta);\n  this.lastTime = time;\n\n  \n  if (this.game.playerCreature().currentHP === 0 || this.game.aiCreature().currentHP === 0) {\n    this.step(timeDelta);\n    this.step(timeDelta);\n    this.step(timeDelta);\n    this.step(timeDelta);\n    cancelAnimationFrame(this.animationId);\n    this.finishCombat();\n    \n  } else {\n    this.animationId = requestAnimationFrame(this.animate.bind(this)); \n  }\n};\n\nBattleView.prototype.step = function step(timeDelta) {\n  if (this.game.getGameSpeed() % 4 === 0) {\n    DistanceBar(this.game, this.ctx, this.canvas);\n    HealthBar(this.game, this.ctx, this.canvas);\n    MoveCreatures(this.game, this.ctx, this.canvas, timeDelta);\n    Combat(this.game, this.animationId);\n    this.game.gameSpeedStep();\n  } else {\n    this.game.gameSpeedStep();\n  }\n}\n\nBattleView.prototype.finishCombat = function() {\n  let text;\n  if (this.game.playerCreature().currentHP === 0 && this.game.aiCreature().currentHP === 0) {\n    text = \"You tie!\";\n  } else if (this.game.playerCreature().currentHP === 0) {\n    text = \"Opponent wins!\";\n  } else {\n    text = \"You win!\";\n    this.game.playerCreature().addVictory();\n  }\n\n  this.game.aiCreature().restoreHP();\n  this.game.playerCreature().restoreHP();\n  this.game.aiCreature().resetPos(500);\n  this.game.playerCreature().resetPos(200);\n  this.textFadeIn(text);\n}\n\nBattleView.prototype.textFadeIn = function(text) {\n  this.ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  this.ctx.font = \"italic 40pt Arial\";\n  let xloc;\n  if (text === \"Opponent wins!\") {\n    xloc = 200;\n  } else {\n    xloc = 300;\n  }\n  this.ctx.fillText(text, xloc, 250);\n  setTimeout(this.textFadeOut(text, xloc), 5000);\n}\n\nBattleView.prototype.textFadeOut = function(text, xloc) {\n  let alpha = 1.0,   // full opacity\n  interval = setInterval(() => {\n      // this.canvas.width = this.canvas.width; // Clears the canvas\n      this.ctx.clearRect(0, 200, this.canvas.width, 70);\n      this.ctx.fillStyle = \"rgba(255, 0, 0, \" + alpha + \")\";\n      this.ctx.font = \"italic 40pt Arial\";\n      this.ctx.fillText(text, xloc, 250);\n      alpha = alpha - 0.05; // decrease opacity (fade out)\n      if (alpha < 0) {\n        this.ctx.clearRect(0, 200, this.canvas.width, 70);\n        clearInterval(interval);\n      }\n  }, 50);\n\n  setTimeout(() => this.gameView.switchScreen(this.gameView), 1000);\n};\n\n\n\nmodule.exports = BattleView;","function Combat(game) {\n  let playerCreature = game.playerCreature();\n  let aiCreature = game.aiCreature();\n\n  // Calculates distance between the two\n  creatureDistance = aiCreature.pos - playerCreature.pos - 100;\n  playerCreatureDamageModifier = (playerCreature.str / 100) + 1;\n  playerCreatureDefenseModifier = (playerCreature.def / 100) + 1;\n  aiCreatureDamageModifier = (aiCreature.str / 100) + 1;\n  aiCreatureDefenseModifier = (aiCreature.def / 100) + 1;\n\n  playerCreature.attackTimer = playerCreature.attackTimer - playerCreature.agi;\n  aiCreature.attackTimer = aiCreature.attackTimer - aiCreature.agi;\n  \n  if (playerCreature.attackTimer < 0) {\n    playerCreature.attackTimer += 25;\n    if (creatureDistance < 151) {\n      aiCreature.currentHP -= (playerCreature.attack('close') * playerCreatureDamageModifier / aiCreatureDefenseModifier);\n    } else if (creatureDistance < 401) {\n      aiCreature.currentHP -= (playerCreature.attack('mid') * playerCreatureDamageModifier / aiCreatureDefenseModifier);\n    } else {\n      aiCreature.currentHP -= (playerCreature.attack('far')  * playerCreatureDamageModifier / aiCreatureDefenseModifier);\n    }\n  }\n\n\n  if(aiCreature.attackTimer < 0) {\n    aiCreature.attackTimer += 25;\n    if (creatureDistance < 151) {\n      playerCreature.currentHP -= aiCreature.attack('close') * aiCreatureDamageModifier / playerCreatureDefenseModifier;\n    } else if (creatureDistance < 401) {\n      playerCreature.currentHP -= aiCreature.attack('mid') * aiCreatureDamageModifier / playerCreatureDefenseModifier;\n    } else {\n      playerCreature.currentHP -= aiCreature.attack('far') * aiCreatureDamageModifier / playerCreatureDefenseModifier;\n    }\n  }\n\n  // if (creatureDistance < 151) {\n  //   aiCreature.currentHP -= (playerCreature.attack('close') * playerCreatureDamageModifier / aiCreatureDefenseModifier);\n  //   playerCreature.currentHP -= aiCreature.attack('close') * aiCreatureDamageModifier / playerCreatureDefenseModifier;\n  // } else if (creatureDistance < 401) {\n  //   aiCreature.currentHP -= (playerCreature.attack('mid') * playerCreatureDamageModifier / aiCreatureDefenseModifier);\n  //   playerCreature.currentHP -= aiCreature.attack('mid') * aiCreatureDamageModifier / playerCreatureDefenseModifier;\n  // } else {\n  //   aiCreature.currentHP -= (playerCreature.attack('far')  * playerCreatureDamageModifier / aiCreatureDefenseModifier);\n  //   playerCreature.currentHP -= aiCreature.attack('far') * aiCreatureDamageModifier / playerCreatureDefenseModifier;\n  // }\n\n  playerCreature.currentHP = Math.min(Math.max(playerCreature.currentHP, 0));\n  aiCreature.currentHP = Math.min(Math.max(aiCreature.currentHP, 0));\n}\n\n\n\nmodule.exports = Combat;","function DistanceBar(game, ctx, canvas) {\n  let playerCreature = game.playerCreature();\n  let aiCreature = game.aiCreature();\n\n  // distance bar\n  ctx.clearRect(0, 0, canvas.width, 50);\n  ctx.strokeStyle = \"purple\";\n  ctx.beginPath();\n  ctx.moveTo(20,20);\n  ctx.lineTo(780,20);\n  ctx.stroke();\n\n  // animate creatures on distance bar\n  ctx.beginPath();\n  ctx.arc(playerCreature.pos + 80, 20, 10, 0, 2*Math.PI, true);\n  ctx.fillStyle = \"green\";\n  ctx.fill();\n\n  ctx.beginPath();\n  ctx.arc(aiCreature.pos + 20, 20, 10, 0, 2*Math.PI, true);\n  ctx.fillStyle = \"blue\";\n  ctx.fill();\n}\n\nmodule.exports = DistanceBar;","function HealthBar(game, ctx, canvas) {\n  let playerCreature = game.playerCreature();\n  let aiCreature = game.aiCreature();\n\n  let playerPercentHealth = playerCreature.currentHP / playerCreature.maxHP;\n  let aiPercentHealth = aiCreature.currentHP / aiCreature.maxHP;\n\n  ctx.clearRect(0,70,canvas.width,30);\n\n  // Player creature's health \n  pos = 20 + (250 - (250 * playerPercentHealth));\n  // pos = 20 + (250 - (250 * 0.5));\n  ctx.strokeStyle = \"red\";\n  ctx.strokeRect(20, 70, 250, 30);\n  ctx.fillStyle = \"red\";\n  ctx.fillRect(pos, 70, (270 - pos), 30);\n  \n  // AI creature's health\n  ctx.strokeStyle = \"red\";\n  ctx.strokeRect(530, 70, 250, 30);\n  ctx.fillStyle = \"red\";\n  // ctx.fillRect(530, 70, (250 / aiPercentHealth), 30);\n  ctx.fillRect(530, 70, (250 * aiPercentHealth), 30);\n}\n\nmodule.exports = HealthBar;","function MoveCreatures(game, ctx, canvas, timeDelta) {\n  let playerCreature = game.playerCreature();\n  let aiCreature = game.aiCreature();\n\n  let timeScale = timeDelta / NORMAL_FRAME_TIME_DELTA;\n  let timing = Math.floor(playerCreature.animationFrame / 4); \n\n  let playerSpriteX = 512 * (timing % 6);\n  let playerSpriteY = 0;\n  switch (playerSpriteX) {\n    case 1536:\n      playerSpriteX = 1024;\n      playerSpriteY = 512;\n      break;\n    case 2048:\n      playerSpriteX = 512;\n      playerSpriteY = 512;\n      break;\n    case 2560:\n      playerSpriteX = 0;\n      playerSpriteY = 512;\n      break;\n  }\n\n  ctx.clearRect(0,100,canvas.width,canvas.height);  \n\n  ctx.drawImage(\n    game.playerCreature().creatureImage,\n    playerSpriteX, playerSpriteY, 512, 512,\n    playerCreature.pos, 290, 200, 200);\n\n  playerCreature.animationFrameStep();\n\n\n  let playerCreatureBehavior = this.game.getBehavior();\n  let playerCreatureMovePattern = '';\n  switch (playerCreatureBehavior) {\n    case \"Random\":\n      playerCreatureMovePattern =\n        (Math.random() < 0.5 ? -1 : 1) * (playerCreature.spd * 10);\n        break;\n    case \"Aggressive\":\n      playerCreatureMovePattern =\n      ((Math.random() < 0.5 ? -1 : 1) * (playerCreature.spd * 10) + (playerCreature.spd * 2));\n        break;\n    case \"Lazy\":\n      playerCreatureMovePattern = 0;\n        break;\n    case \"Timid\":\n      playerCreatureMovePattern =\n        ((Math.random() < 0.5 ? -1 : 1) * (playerCreature.spd * 10) - (playerCreature.spd * 2));\n        break;\n  }\n  // Agressive movement pattern, randomizes but favors moving towards enemy\n  // playerCreature.pos+=(Math.floor((Math.random() * ((playerCreature.spd * 2) + 1) -(playerCreature.spd / 2) * timeScale))); \n\n\n  if (\n    playerCreature.pos === playerCreature.nextPosition ||\n    playerCreature.pos + 110 >= aiCreature.pos\n    ) {\n    playerCreature.nextPosition = playerCreature.pos + playerCreatureMovePattern;\n\n    // Prevents the creature from \"falling off\" the screen\n    playerCreature.nextPosition = Math.min(Math.max(playerCreature.nextPosition, 10), aiCreature.pos - 110);\n  }\n\n  if (playerCreatureBehavior === \"Lazy\") {\n    playerCreature.pos += 0;\n  } else if (playerCreature.pos < playerCreature.nextPosition) {\n    playerCreature.pos += playerCreature.spd;\n  } else {\n    playerCreature.pos -= playerCreature.spd;\n  }\n\n  let aiTiming = Math.floor(aiCreature.animationFrame / 4); \n\n  let aiSpriteX = 512 * (aiTiming % 6);\n  let aiSpriteY = 0;\n  switch (aiSpriteX) {\n    case 1536:\n      aiSpriteX = 1024;\n      aiSpriteY = 512;\n      break;\n    case 2048:\n      aiSpriteX = 512;\n      aiSpriteY = 512;\n      break;\n    case 2560:\n      aiSpriteX = 0;\n      aiSpriteY = 512;\n      break;\n  }\n  \n  ctx.drawImage(\n    game.aiCreature().creatureImage,\n    aiSpriteX, aiSpriteY, 512, 512,\n    aiCreature.pos, 290, 200, 200);\n    \n  aiCreature.animationFrameStep();\n    \n  if (\n    aiCreature.pos === aiCreature.nextPosition ||\n    aiCreature.pos <= playerCreature.pos + 110\n    ) {\n    aiCreature.nextPosition = aiCreature.pos + ((Math.random() < 0.5 ? -1 : 1) * (aiCreature.spd * 10));\n\n    // Prevents the creature from \"falling off\" the screen\n    aiCreature.nextPosition = Math.min(Math.max(aiCreature.nextPosition, playerCreature.pos + 110), 690);\n  }\n\n  if (aiCreature.pos < aiCreature.nextPosition) {\n    aiCreature.pos += aiCreature.spd;\n  } else {\n    aiCreature.pos -= aiCreature.spd;\n  }\n\n}\n\n\n\nconst NORMAL_FRAME_TIME_DELTA = 1000 / 60;\n\nmodule.exports = MoveCreatures;","function Creature(\n  position = 200,\n  character = \"./docs/creatures/OceanosL.png\",\n  nextPosition = position,\n  strength = 14,\n  defense = 13,\n  agi = 13,\n  speed = 5,\n  healthPoints = 100,\n  attackTimer = 25,\n  weapon = null,\n  armor = null,\n  attacks = {\n    // {rangeMin: 0, rangeMax: 150, damage: 10},\n    // {rangeMin: 151, rangeMax: 400, damage: 10},\n    // {rangeMid: 401, rangeMax: 700, damage: 5},\n    attackClose: 4,\n    attackMid: 3,\n    attackFar: 3,\n    }\n  ) {\n  \n  this.pos = position;\n  this.nextPosition = nextPosition;\n  this.str = strength;\n  this.def = defense;\n  this.agi = agi;\n  this.spd = speed;\n  this.maxHP = healthPoints;\n  this.attackTimer = attackTimer;\n  this.currentHP = healthPoints;\n  this.weapon = weapon;\n  this.armor = armor;\n  this.attacks = attacks;\n  this.animationFrame = 0;\n  this.creatureImage = new Image();\n  this.creatureImage.src = character;\n  this.behaviorList = [\"Random\", \"Aggressive\", \"Lazy\", \"Timid\"];\n  this.victories = 0;\n\n  Creature.prototype.attack = (range) => {\n    if (range === \"close\") {\n      return (Math.random() * this.attacks.attackClose) + 1;\n    } else if (range === \"mid\") {\n      return (Math.random() * this.attacks.attackMid) + 1;\n    } else {\n      return (Math.random() * this.attacks.attackFar) + 1;\n    }\n  }\n\n  Creature.prototype.restoreHP = function() {\n    this.currentHP = this.maxHP;\n  }\n\n  Creature.prototype.updateBehavior = function(direction) {\n    if (direction === \"left\") {\n      this.behaviorList.push(this.behaviorList.shift());\n    } else {\n      this.behaviorList.unshift(this.behaviorList.pop());\n    }\n  }\n}\n  \nCreature.prototype.resetPos = function(newPos) {\n  this.pos = newPos;\n}\n\nCreature.prototype.updateStats = function(armor) {\n  this.str = 10 + armor.str;\n  this.def = 10 + armor.def;\n  this.agi = 10 + armor.agi;\n}\n\nCreature.prototype.updateAttacks = function(weapon) {\n  this.attacks.attackClose = weapon.attackClose;\n  this.attacks.attackMid = weapon.attackMid;\n  this.attacks.attackFar = weapon.attackFar;\n}\n\nCreature.prototype.animationFrameStep = function() {\n  this.animationFrame++;\n};\n\nCreature.prototype.getBehavior = function() {\n  return this.behaviorList[0];\n}\n\nCreature.prototype.addVictory = function() {\n  this.victories++;\n}\n\nCreature.prototype.getVictories = function() {\n  return this.victories;\n}\n\n\n\nmodule.exports  = Creature;","const Creature = require('./creature');\nconst Equipment = require('./preparationView/equipment');\n\nfunction Game() {\n  let equipment = new Equipment();\n  equipment.addDefaultWeapon();\n  equipment.addWeapon();\n  equipment.addWeapon();\n  equipment.addWeapon();\n  equipment.addDefaultArmor();\n  equipment.addArmor();\n  equipment.addArmor();\n  equipment.addArmor();\n  // let playerCreature = new Creature(pos = 200, character = './docs/creatures/BigFish.png');\n  let playerCreature = new Creature(pos = 200, character = './docs/creatures/BigFishPlayer.png');\n  let aiCreature = new Creature(pos = 500);\n  let gameSpeed = 0;\n  let gameScreen = \"prep\";\n\n\n  Game.prototype.playerCreature = () => {\n    return playerCreature;\n  }\n    \n  Game.prototype.aiCreature = () => {\n    return aiCreature;\n  }\n\n  Game.prototype.resetGameSpeed = () => {\n    this.gameSpeed = 0;\n  }\n\n  Game.prototype.getGameSpeed = () => {\n    return gameSpeed;\n  }\n\n  Game.prototype.gameSpeedStep = () => {\n    gameSpeed++;\n  }\n\n  Game.prototype.screen = () => {\n    return gameScreen;\n  }\n\n  Game.prototype.setScreen = (newScreen) => {\n    gameScreen = newScreen;\n  };\n\n  Game.prototype.getWeapons = () => {\n    return equipment.getWeapons();\n  }\n\n  Game.prototype.getArmors = () => {\n    return equipment.getArmors();\n  }\n\n  Game.prototype.rotateWeapons = (direction) => {\n    equipment.rotateWeapons(direction);\n\n    playerCreature.updateAttacks(equipment.getWeapons()[0]);\n  }\n\n  Game.prototype.rotateArmors = (direction) => {\n    equipment.rotateArmors(direction);\n    playerCreature.updateStats(this.getArmors()[0]);\n  }\n\n  Game.prototype.rotateBehavior = function(direction) {\n    playerCreature.updateBehavior(direction);\n  }\n\n  Game.prototype.weaponDescription = () => {\n    return equipment.weaponDescription();\n  }\n\n  Game.prototype.armorDescription = () => {\n    return equipment.armorDescription();\n  }\n\n  Game.prototype.getWeaponDamages = () => {\n    return `Close: ${equipment.weapons[0].attackClose},\n            Medium: ${equipment.weapons[0].attackMid},\n            Far: ${equipment.weapons[0].attackFar}`;\n  }\n\n  Game.prototype.getArmorStats = () => {\n    return `Str: ${equipment.armors[0].str},\n            Def: ${equipment.armors[0].def},\n            Agi: ${equipment.armors[0].agi}`;\n  }\n\n  Game.prototype.getBehavior = function() {\n    return playerCreature.getBehavior();\n  }\n\n  Game.prototype.getBehaviorDescription = function() {\n    switch (this.getBehavior()) {\n      case \"Random\":\n        return \"Your creature will go anywhere it wants!\"\n      case \"Aggressive\":\n        return \"Your creature likes to fight up close.\"\n      case \"Lazy\":\n        return \"Your creature tries to not move too much.\"\n      case \"Timid\":\n        return \"Your creature tries to stay far away.\"\n    }\n  }\n\n}\n\nmodule.exports = Game;","const PreparationView = require('./preparationView/preparationView');\nconst BattleView = require('./battleView/battleView');\n\nfunction GameView(game, ctx, canvas) {\n  this.game = game;\n  this.ctx = ctx;\n  this.canvas = canvas;\n}\n\nGameView.prototype.switchScreen = function switchScreen(gameView) {\n  if (this.game.screen() === \"battle\") {\n    this.game.setScreen(\"prep\");\n    this.game.resetGameSpeed();\n    \n    // Remove the forest background\n    const backgroundLayerFront = document.getElementById(\"bg-front\");\n    backgroundLayerFront.classList.remove(\"front-image-layers-forest\");\n    this.canvas.classList.remove(\"back-image-layers-forest\");\n\n    // Apply the hills background\n    backgroundLayerFront.classList.add(\"front-image-layers-hills\");\n    this.canvas.classList.add(\"back-image-layers-hills\");\n\n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    new PreparationView(this.game, this.ctx, this.canvas, gameView).start();\n  } else {\n    this.game.setScreen(\"battle\");\n    this.game.resetGameSpeed();\n    \n    // Remove the hills background\n    const backgroundLayerFront = document.getElementById(\"bg-front\");\n    backgroundLayerFront.classList.remove(\"front-image-layers-hills\");\n    this.canvas.classList.remove(\"back-image-layers-hills\");\n\n    // Apply the forest background\n    backgroundLayerFront.classList.add(\"front-image-layers-forest\");\n    this.canvas.classList.add(\"back-image-layers-forest\");\n    \n    this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n    new BattleView(this.game, this.ctx, this.canvas, gameView).start();\n  }\n}\n\nmodule.exports = GameView;","const Game = require(\"./game\");\nconst TutorialView = require('./tutorialView');\n// const PreparationView = require('./preparationView/preparationView');\n// const GameView = require('./gameView');\n\ndocument.addEventListener(\"DOMContentLoaded\", function(){\n  const canvas = document.getElementById(\"myCanvas\");\n  canvas.width = 800;\n  canvas.height = 500;\n  const ctx = canvas.getContext(\"2d\");\n\n  let game = new Game();\n  // let gameView = new GameView(game, ctx, canvas);\n  // new PreparationView(game, ctx, canvas, gameView);\n  new TutorialView(game, ctx, canvas);\n});\n\n// Creature sprites from:\n// https://aekashics.itch.io/aekashics-librarium-librarium-static-batch-megapack\n\n// Backgrounds from:\n// https://edermunizz.itch.io/\n\n// TODO\n// Fix creatures to use hashmap, so custom assignments and stat management are easier\n// More involved animation, if possible\n// Damage numbers\n// Pause movement and attack animation while attacking\n// projectile animation for mid/far ranged attacks","function Armor(\n    stats = generateStats(),\n    name = generateArmorName(),\n    description = generateArmorDescription()) {\n  this.str = stats.str;\n  this.def = stats.def;\n  this.agi = stats.agi;\n  this.name = name;\n  this.description = description;\n}\n\ngenerateStats = function() {\n  let str = Math.floor(Math.random() * 10);\n  let def = Math.floor(Math.random() * (10 - str))\n  let agi = 10 - str - def;\n  return {str: str, def: def, agi: agi}\n\n}\n\ngenerateArmorName = function() {\n  const prefix = [\n    \"Collar\",\n    \"Mask\",\n    \"Shoes\",\n    \"Glove\",\n    \"Shield\",\n    \"Helm\",\n    \"Cloak\",\n    \"Ring\",\n  ]\n  const suffix = [\n    \"Defense\",\n    \"Evasion\",\n    \"Strength\",\n    \"Moxy\",\n    \"Vigor\",\n    \"Vim\",\n    \"Awe\",\n    \"Pluck\"\n  ]\n  let armorName = prefix[Math.floor(Math.random() * 8)]\n              + \" of \" + suffix[Math.floor(Math.random() * 8)];\n\n  return armorName;\n}\n\ngenerateArmorDescription = function() {\n  const possibilities = [\n    \"This shifts sizes to adjust to its wearer\",\n    \"Provides a modicrum of protection\",\n    \"Stlyish AND functional!\",\n    \"Smells faintly of apples\",\n  ]\n\n  return possibilities[Math.floor(Math.random() * 4)];\n}\n\n\n\nmodule.exports = Armor;","function CreatureBox(game, ctx, canvas) {\n  this.game = game;\n  this.ctx = ctx;\n  this.canvas = canvas;\n  let playerCreature = this.game.playerCreature();\n\n  // Box border to see where it lies on the canvas\n  // ctx.fillStyle = \"purple\";\n  // ctx.fillRect(0, 300, canvas.width, 200);\n  // ctx.clearRect(10, 310, (canvas.width - 20), 180);\n\n  ctx.clearRect(350, 290, 200, 200);\n\n  let timing = Math.floor(playerCreature.animationFrame / 4); \n\n  // WORKING< FOR TESTINGS SMALLER IDLE ANIMATION\n  // let playerSpriteY = 512 * (Math.floor(timing / 9) % 2);\n  let playerSpriteX = 512 * (timing % 6);\n  let playerSpriteY = 0;\n  switch (playerSpriteX) {\n    case 1536:\n      playerSpriteX = 1024;\n      playerSpriteY = 512;\n      break;\n    case 2048:\n      playerSpriteX = 512;\n      playerSpriteY = 512;\n      break;\n    case 2560:\n      playerSpriteX = 0;\n      playerSpriteY = 512;\n      break;\n  }\n\n  ctx.drawImage(\n    this.game.playerCreature().creatureImage,\n    playerSpriteX, playerSpriteY, 512, 512,\n    350, 290, 200, 200);\n\n  playerCreature.animationFrameStep();\n\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.font = \"italic 26pt Arial\";\n  ctx.fillText(`Victories: ${this.game.playerCreature().getVictories()}`, 95, 400);\n\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.font = \"italic 26pt Arial\";\n  ctx.fillText(\"Next battle: \", 600, 400);\n}\n\n\n\n\nmodule.exports = CreatureBox;","function DescriptionBox(game, ctx, canvas) {\n  this.game = game;\n  this.ctx = ctx;\n  this.canvas = canvas;\n\n  ctx.clearRect(410, 10, 380, 280);\n\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.font = \"italic 12pt Arial\";\n  ctx.fillText(getLines(ctx, this.game.weaponDescription(), 350), 425, 52);\n  ctx.fillText(getLines(ctx, this.game.getWeaponDamages(), 350), 425, 71);\n  ctx.fillText(getLines(ctx, this.game.armorDescription(), 350), 425, 146);\n  ctx.fillText(getLines(ctx, this.game.getArmorStats(), 350), 425, 165);\n  ctx.fillText(getLines(ctx, this.game.getBehaviorDescription(), 350), 425, 240);\n}\n\nfunction getLines(ctx, text, maxWidth) {\n  let words = text.split(\" \");\n  let lines = [];\n  let currentLine = words[0];\n\n  for (var i = 1; i < words.length; i++) {\n      let word = words[i];\n      let width = ctx.measureText(currentLine + \" \" + word).width;\n      if (width < maxWidth) {\n          currentLine += \" \" + word;\n      } else {\n          lines.push(currentLine);\n          currentLine = word;\n      }\n  }\n  lines.push(currentLine);\n  return lines;\n}\n\n\nmodule.exports = DescriptionBox;","function EquipBox(game, ctx, canvas) {\n  this.game = game;\n  this.ctx = ctx;\n  this.canvas = canvas;\n\n  ctx.fillStyle = \"green\";\n\n  weaponSelectText();\n  armorSelectText();\n  aiSelectText();\n  weaponSelect();\n  armorSelect();\n  aiSelect();\n  weaponSelectLeft();\n  weaponSelectRight();\n  armorSelectLeft();\n  armorSelectRight();\n  aiSelectLeft();\n  aiSelectRight();\n}\n\nweaponSelectText = function() {\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.font = \"italic 20pt Arial\";\n  ctx.fillText(\"Weapon: \", 20, 55);\n}\n\narmorSelectText = function() {\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.font = \"italic 20pt Arial\";\n  ctx.fillText(\"Armor: \", 20, 150);\n}\n\naiSelectText = function() {\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.font = \"italic 20pt Arial\";\n  ctx.fillText(\"AI: \", 20, 245);\n}\n\nweaponSelect = function() {\n  ctx.fillRect(130, 20, 250, 50);\n  ctx.fillStyle = \"rgba(244, 242, 206, 1)\";\n  ctx.fillRect(135, 25, 240, 40);\n\n  ctx.fillStyle = \"black\";\n  ctx.font = \"italic 14pt Arial\";\n  ctx.fillText(this.game.getWeapons()[0].name, 180, 53);\n}\n\narmorSelect = function() {\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.fillRect(130, 115, 250, 50);\n  ctx.fillStyle = \"rgba(244, 242, 206, 1)\";\n  ctx.fillRect(135, 120, 240, 40);\n\n  ctx.fillStyle = \"black\";\n  ctx.font = \"italic 14pt Arial\";\n  ctx.fillText(this.game.getArmors()[0].name, 180, 147);\n}\n\naiSelect = function() {\n  ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  ctx.fillRect(130, 210, 250, 50);\n  ctx.fillStyle = \"rgba(244, 242, 206, 1)\";\n  ctx.fillRect(135, 215, 240, 40);\n\n  ctx.fillStyle = \"black\";\n  ctx.font = \"italic 14pt Arial\";\n  ctx.fillText(this.game.getBehavior(), 180, 242);\n}\n\nweaponSelectLeft = function() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(135, 25, 40, 40);\n  ctx.fillStyle=\"white\";\n  ctx.beginPath();\n  ctx.moveTo(165, 39);\n  ctx.lineTo(145, 46);\n  ctx.lineTo(165, 53);\n  ctx.closePath();\n  ctx.fill();\n}\n\nweaponSelectRight = function() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(335, 25, 40, 40)\n  ctx.fillStyle=\"white\";\n  ctx.beginPath();\n  ctx.moveTo(345, 39);\n  ctx.lineTo(365, 46);\n  ctx.lineTo(345, 53);\n  ctx.closePath();\n  ctx.fill();;\n\n}\n\narmorSelectLeft = function() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(135, 120, 40, 40);\n  ctx.fillStyle=\"white\";\n  ctx.beginPath();\n  ctx.moveTo(165, 134);\n  ctx.lineTo(145, 141);\n  ctx.lineTo(165, 148);\n  ctx.closePath();\n  ctx.fill();\n}\n\narmorSelectRight = function() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(335, 120, 40, 40);\n  ctx.fillStyle=\"white\";\n  ctx.beginPath();\n  ctx.moveTo(345, 134);\n  ctx.lineTo(365, 141);\n  ctx.lineTo(345, 148);\n  ctx.closePath();\n  ctx.fill();\n}\n\naiSelectLeft = function() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(135, 215, 40, 40);\n  ctx.fillStyle=\"white\";\n  ctx.beginPath();\n  ctx.moveTo(165, 229);\n  ctx.lineTo(145, 236);\n  ctx.lineTo(165, 243);\n  ctx.closePath();\n  ctx.fill();\n}\n\naiSelectRight = function() {\n  ctx.fillStyle = \"black\";\n  ctx.fillRect(335, 215, 40, 40);\n  ctx.fillStyle=\"white\";\n  ctx.beginPath();\n  ctx.moveTo(345, 229);\n  ctx.lineTo(365, 236);\n  ctx.lineTo(345, 243);\n  ctx.closePath();\n  ctx.fill();\n}\n\nmodule.exports = EquipBox;","const Weapon = require('./weapon');\nconst Armor = require('./armor');\n\nfunction Equipment() {\n  this.weapons = [];\n  this.armors = [];\n\n  Equipment.prototype.getWeapons = () => {\n    return this.weapons;\n  }\n\n  Equipment.prototype.addDefaultWeapon = function() {\n    this.weapons = this.weapons.concat(new Weapon(4, 3, 3, \"Default\", \"Your starting weapon\"));\n  }\n\n  Equipment.prototype.addDefaultArmor = function() {\n    this.armors = this.armors.concat(new Armor({str: 4, def: 3, agi: 3}, \"Default\", \"Your starting armor\"));\n  }\n  \n  Equipment.prototype.addWeapon = function() {\n    let closeDamage = Math.floor(Math.random() * 8);\n    let farDamage = Math.max(Math.floor(Math.random() * (9 - closeDamage)), 1);\n    let midDamage = Math.max(10 - closeDamage - farDamage, 1);\n    this.weapons = this.weapons.concat(new Weapon(closeDamage, midDamage, farDamage));\n  }\n\n  Equipment.prototype.getArmors = () => {\n    return this.armors;\n  }\n\n  Equipment.prototype.addArmor = function() {\n    this.armors = this.armors.concat(new Armor());\n  }\n\n  Equipment.prototype.rotateWeapons = (direction) => {\n    if (direction === \"left\") {\n      this.weapons.push(this.weapons.shift());\n    } else {\n      this.weapons.unshift(this.weapons.pop());\n    }\n  }\n\n  Equipment.prototype.rotateArmors = (direction) => {\n    if (direction === \"left\") {\n      this.armors.push(this.armors.shift());\n    } else {\n      this.armors.unshift(this.armors.pop());\n    }\n  }\n\n  Equipment.prototype.weaponDescription = () => {\n    return this.weapons[0].description;\n  }\n\n  Equipment.prototype.armorDescription = () => {\n    return this.armors[0].description;\n  }\n\n  Equipment.prototype.getWeaponDamages = () => {\n    return {attackClose: weapons[0].attackClose,\n            attackMid: weapons[0].attackMid,\n            attackFar: weapons[0].attackFar}\n  }\n}\n\nmodule.exports = Equipment;","const EquipBox = require('./equipBox');\nconst CreatureBox = require('./creatureBox');\nconst DescriptionBox = require('./descriptionBox');\n\nfunction PreparationView(game, ctx, canvas, gameView) {\n  this.game = game;\n  this.canvas = canvas;\n  this.ctx = ctx;\n  this.gameView = gameView;\n\n  this.handleClick = this.handleClick.bind(this);\n  this.handleCursor = this.handleCursor.bind(this);\n}\n\nPreparationView.prototype.start = function start() {\n  this.lastTime = 0;\n\n  document.addEventListener('click', this.handleClick, false);\n  document.addEventListener('mousemove', this.handleCursor, false);\n  requestAnimationFrame(this.animate.bind(this));\n};\n\nPreparationView.prototype.handleClick = function(e) {\n  let clickX = e.pageX - this.canvas.offsetLeft;\n  let clickY = e.pageY - (document.getElementById('height-test').offsetTop);\n  // console.log('-----')\n  // console.log(document.getElementById('height-test').offsetTop)\n  // console.log(this.ctx);\n  // console.log(this.canvas.pageY);\n  // console.log(this.canvas.layerY);\n  // console.log(this.canvas.offsetTop);\n  // console.log('-----)\n  // console.log(`${clickX}, ${clickY}`)\n\n  // If the user clicks on the \"left\" arrow\n  if (clickX > 139 && clickX < 178) {\n    // of the weapons select\n    if (clickY > 27 && clickY < 66) {\n      this.game.rotateWeapons(\"left\");\n    // of the armors select\n    } else if (clickY > 122 && clickY < 159) {\n      this.game.rotateArmors(\"left\");\n    } else if (clickY > 219 && clickY < 262) {\n      this.game.rotateBehavior(\"left\");\n    }\n  }\n\n  // If the user clicks on the \"right\" arrow\n  if (clickX > 338 && clickX < 378) {\n    // of the weapons select\n    if (clickY > 27 && clickY < 66) {\n      this.game.rotateWeapons(\"right\");\n    // of the armors select\n    } else if (clickY > 122 && clickY < 162) {\n      this.game.rotateArmors(\"right\");\n    // of the behavior select\n    } else if (clickY > 219 && clickY < 262) {\n      this.game.rotateBehavior(\"right\");\n    }\n  }\n\n  // If the user clicks the \"Next Battle\" button\n  if (clickX > 604 && clickX < 778\n      && clickY > 377 && clickY < 402) {\n        document.removeEventListener(\"click\", this.handleClick);\n        document.removeEventListener(\"mousemove\", this.handleCursor);\n        cancelAnimationFrame(this.animationId);\n        this.finishPreparation();\n  }    \n}\n\nPreparationView.prototype.handleCursor = function(e) {\n  let mouseX = e.pageX - this.canvas.offsetLeft;\n  let mouseY = e.pageY - (document.getElementById('height-test').offsetTop);\n  // console.log(`${mouseX}, ${mouseY}`)\n\n  // If the user hovers over the X axis of the left arrow buttons \n  if (mouseX > 139 && mouseX < 178) {\n    // Of the weapon select \n    if (mouseY > 27 && mouseY < 66) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer');\n      }\n    // Of the armor select\n    } else if (mouseY > 122 && mouseY < 162) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer');\n      }\n    // Of the behavior select\n    } else if (mouseY > 219 && mouseY < 262) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer');\n      }\n    } else {\n      this.canvas.classList.remove('cursor-pointer');\n    }\n  // If the user hovers over the X axis of the right arrow butons\n  } else if (mouseX > 338 && mouseX < 379) {\n    // Of the weapon select \n    if (mouseY > 27 && mouseY < 66) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer');\n      }\n    // Of the armor select\n    } else if (mouseY > 122 && mouseY < 162) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer');\n      }\n    // Of the behavior select\n    } else if (mouseY > 219 && mouseY < 262) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer');\n      }\n    } else {\n      this.canvas.classList.remove('cursor-pointer');\n    }\n  // If the user hovers of the \"Next Battle\" button\n  } else if (mouseX > 599 && mouseX < 786 && mouseY > 369 && mouseY < 411) {\n    if (!this.canvas.classList.contains('cursor-pointer')) {\n      this.canvas.classList.add('cursor-pointer');\n    } \n  } else {\n    this.canvas.classList.remove('cursor-pointer');\n  }\n}\n\nPreparationView.prototype.animate = function animate(time) {\n  const timeDelta = time - this.lastTime;\n  \n\n  this.step(timeDelta);\n  this.lastTime = time;\n\n  this.animationId = requestAnimationFrame(this.animate.bind(this)); \n}\n\nPreparationView.prototype.step = function step(timeDelta) {\n  if (this.game.getGameSpeed() % 4 === 0) {\n    EquipBox(this.game, this.ctx, this.canvas);\n    CreatureBox(this.game, this.ctx, this.canvas);\n    DescriptionBox(this.game, this.ctx, this.canvas);\n    this.game.gameSpeedStep();\n  } else {\n    this.game.gameSpeedStep();\n  }\n}\n\nPreparationView.prototype.finishPreparation = function() {\n  this.textFadeIn(\"Get Ready!\");\n}\n\nPreparationView.prototype.textFadeIn = function(text) {\n  this.ctx.clearRect(0, 0, this.canvas.width, 280);\n  this.ctx.fillStyle = \"rgba(255, 0, 0, 1)\";\n  this.ctx.font = \"italic 40pt Arial\";\n  let xloc = 300;\n  this.ctx.fillText(text, xloc, 250);\n  setTimeout(this.textFadeOut(text, xloc), 5000);\n}\n\nPreparationView.prototype.textFadeOut = function(text, xloc) {\n  let alpha = 1.0,   // full opacity\n  interval = setInterval(() => {\n    // this.canvas.width = this.canvas.width; // Clears the canvas\n    this.ctx.clearRect(0, 200, this.canvas.width, 70);\n    this.ctx.fillStyle = \"rgba(255, 0, 0, \" + alpha + \")\";\n    this.ctx.font = \"italic 40pt Arial\";\n    this.ctx.fillText(text, xloc, 250);\n    alpha = alpha - 0.05; // decrease opacity (fade out)\n    if (alpha < 0) {\n      this.ctx.clearRect(0, 200, this.canvas.width, 70);\n      clearInterval(interval);\n    }\n  }, 50);\n\n  setTimeout(() => this.gameView.switchScreen(this.gameView), 1000);\n};\n\nmodule.exports = PreparationView;","function Weapon(\n    attackClose,\n    attackMid,\n    attackFar,\n    name = generateWeaponName(),\n    description = generateWeaponDescription()) {\n  this.attackClose = attackClose;\n  this.attackMid = attackMid;\n  this.attackFar = attackFar;\n  this.name = name;\n  this.description = description;\n}\n\nclose = function() {\n  return this.attackClose.damage;\n}\n\nmid = function() {\n  return this.attackMid.damage;\n}\n\nfar = function() {\n  return this.attackFar.damage;\n}\n\ngenerateWeaponName = function() {\n  const prefix = [\n    \"Stick\",\n    \"Torch\",\n    \"Fist\",\n    \"Dagger\",\n    \"Blade\",\n    \"Tooth\",\n    \"Claw\",\n    \"Eye\"\n   ]\n   const suffix = [\n     \"fire\",\n     \"ice\",\n     \"frenzy\",\n     \"fury\",\n     \"decay\",\n     \"bravado\",\n     \"grit\",\n     \"pizzaz\"\n   ]\n   weaponName = prefix[Math.floor(Math.random() * 8)]\n                + \" of \" + suffix[Math.floor(Math.random() * 8)];\n\n   return weaponName;\n}\n\ngenerateWeaponDescription = function() {\n  const possibilities = [\n    \"More useful than a spoon\",\n    \"This object always feels cold to the touch\",\n    \"It hums with a strange energy\",\n    \"This ancient tool was once used as currency\",\n  ]\n\n  return possibilities[Math.floor(Math.random() * 4)];\n}\n\n\n\nmodule.exports = Weapon;","const PreparationView = require('./preparationView/preparationView');\nconst GameView = require('./gameView');\n\nfunction TutorialView(game, ctx, canvas) {\n  this.game = game;\n  this.ctx = ctx;\n  this.canvas = canvas;\n\n  this.gameView = new GameView(game, ctx, canvas);\n\n  this.offsetLeft = this.canvas.offsetLeft;\n  this.offsetTop = document.getElementById('height-test').offsetTop; \n  this.currentHighlight = [\"creature\", \"showWeapon\", \"showArmor\", \"showBehavior\", \"showNext\"];\n\n  this.handleClick = this.handleClick.bind(this);\n  this.handleCursor = this.handleCursor.bind(this);\n  this.handleNext = this.handleNext.bind(this);\n  this.handleSkip = this.handleSkip.bind(this);\n  this.showCreature = this.showCreature.bind(this);\n  this.showWeapon = this.showWeapon.bind(this);\n  this.showArmor = this.showArmor.bind(this);\n  this.showBehavior = this.showBehavior.bind(this);\n  this.showNext = this.showNext.bind(this);\n  this.clearView = this.clearView.bind(this);\n  this.writeTutorialNext = this.writeTutorialNext.bind(this);\n  this.writeTutorialSkip = this.writeTutorialSkip.bind(this);\n\n  document.addEventListener('click', this.handleClick, false);\n  document.addEventListener('mousemove', this.handleCursor, false);\n\n  this.showCreature();\n}\n\nTutorialView.prototype.handleClick = function(e) {\n  let clickX = e.pageX - this.offsetLeft;\n  let clickY = e.pageY - this.offsetTop;\n\n  // If the user clicks the Y axis of the buttons\n  if (clickY > 424 && clickY < 471) {\n    // If the user clicks the Skip button\n    if (clickX > 24 && clickX < 171) {\n      this.handleSkip();      \n    // If the user clicks the Next button\n    } else if (clickX > 224 && clickX < 296) {\n      // console.log('correctNext')\n      this.handleNext();\n    }\n  }\n\n}\n\nTutorialView.prototype.handleCursor = function(e) {\n  let mouseX = e.pageX - this.offsetLeft;\n  let mouseY = e.pageY - this.offsetTop;\n\n  // If the user hovers over the Y axis of the buttons\n  if (mouseY > 424 && mouseY < 471) {\n    // If the user hovers over the Skip button\n    if (mouseX > 24 && mouseX < 171) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer')\n      }\n    // If the user hovers over the Next button\n    } else if (mouseX > 224 && mouseX < 296) {\n      if (!this.canvas.classList.contains('cursor-pointer')) {\n        this.canvas.classList.add('cursor-pointer')\n      }\n    } else {\n      this.canvas.classList.remove('cursor-pointer');\n    }\n  } else {\n    this.canvas.classList.remove('cursor-pointer');\n  }\n}\n\nTutorialView.prototype.handleNext = function(e) {\n  this.currentHighlight.shift();\n  switch (this.currentHighlight[0]) {\n    case \"showWeapon\":\n      this.showWeapon();\n      break;\n    case \"showArmor\":\n      this.showArmor();\n      break;\n    case \"showBehavior\":\n      this.showBehavior();\n      break;\n    case \"showNext\":\n      this.showNext();\n      break;\n    default:\n      this.handleSkip();\n      break;\n\n\n  }\n}\n\nTutorialView.prototype.handleSkip = function(e) {\n  this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  document.removeEventListener(\"click\", this.handleClick);\n  document.removeEventListener(\"mousemove\", this.handleCursor);\n  this.canvas.classList.remove(\"back-image-tutorial\");\n  this.canvas.classList.add(\"back-image-layers-hills\");\n  const backgroundLayerFront = document.getElementById(\"bg-front\");\n  backgroundLayerFront.classList.add(\"front-image-layers-hills\");\n  // console.log(this.gameVeiw);\n  new PreparationView(this.game, this.ctx, this.canvas, this.gameView).start(); \n\n};\n\nTutorialView.prototype.showCreature = function() {\n  this.ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\n  this.ctx.fillRect(0, 0, 800, 500)\n\n  this.ctx.clearRect(340, 280, 220, 200);\n  this.ctx.fillStyle = \"rgba(255, 91, 1, 1)\";\n\n  this.writeTutorialNext();\n  this.writeTutorialSkip();\n\n  this.ctx.font = \"italic 25pt Arial\";\n  lines = \"This is your creature\"\n  this.ctx.fillText(getLines(this.ctx, lines, 350), 20, 350);\n}\n\nTutorialView.prototype.showWeapon = function() {\n  this.clearView(18, 17, 720, 60);\n\n  this.writeTutorialNext();\n  this.writeTutorialSkip();\n\n  this.ctx.font = \"italic 25pt Arial\";\n  lines1 = \"This is where you\";\n  lines2 = \"select your weapon.\";\n  this.ctx.fillText(getLines(this.ctx, lines1, 350), 20, 350);\n  this.ctx.fillText(getLines(this.ctx, lines2, 350), 20, 380);\n}\n\nTutorialView.prototype.showArmor = function() {\n  this.clearView(18, 110, 720, 60);\n\n\n  this.writeTutorialNext();\n  this.writeTutorialSkip();\n\n  this.ctx.font = \"italic 25pt Arial\";\n  lines1 = \"This is where you\";\n  lines2 = \"select your armor.\";\n  this.ctx.fillText(getLines(this.ctx, lines1, 350), 20, 350);\n  this.ctx.fillText(getLines(this.ctx, lines2, 350), 20, 380);\n\n}\n\nTutorialView.prototype.showBehavior = function() {\n  this.clearView(18, 205, 720, 60);\n\n\n  this.writeTutorialNext();\n  this.writeTutorialSkip();\n\n  this.ctx.font = \"italic 25pt Arial\";\n  lines1 = \"This is where you\";\n  lines2 = \"select your behavior.\";\n  this.ctx.fillText(getLines(this.ctx, lines1, 350), 20, 350);\n  this.ctx.fillText(getLines(this.ctx, lines2, 350), 20, 380);\n\n}\n\nTutorialView.prototype.showNext = function() {\n  this.clearView(595, 368, 190, 40);\n\n\n  this.writeTutorialNext();\n  this.writeTutorialSkip();\n\n  this.ctx.font = \"italic 25pt Arial\";\n  lines1 = \"When ready, send\";\n  lines2 = \"your creature to battle.\";\n  this.ctx.fillText(getLines(this.ctx, lines1, 350), 20, 350);\n  this.ctx.fillText(getLines(this.ctx, lines2, 350), 20, 380);\n\n}\n\nTutorialView.prototype.writeTutorialNext = function() {\n  this.ctx.fillStyle = \"rgba(255, 91, 1, 1)\";\n\n  this.ctx.font = \"italic 18pt Arial\";\n  let lines = \"Next\";\n  this.ctx.fillText(getLines(this.ctx, lines, 50), 225, 450);\n}\n\nTutorialView.prototype.writeTutorialSkip = function() {\n  lines = \"Skip Tutorial\";\n  this.ctx.fillText(getLines(this.ctx, lines, 200), 25, 450);\n}\n\nTutorialView.prototype.clearView = function(x, y, width, height) {\n  this.ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n  this.ctx.fillStyle = \"rgba(0, 0, 0, 0.7)\";\n  this.ctx.fillRect(0, 0, 800, 500)\n\n  this.ctx.clearRect(x, y, width, height);\n}\n\nfunction getLines(ctx, text, maxWidth) {\n  let words = text.split(\" \");\n  let lines = [];\n  let currentLine = words[0];\n\n  for (var i = 1; i < words.length; i++) {\n      let word = words[i];\n      let width = ctx.measureText(currentLine + \" \" + word).width;\n      if (width < maxWidth) {\n          currentLine += \" \" + word;\n      } else {\n          lines.push(currentLine);\n          currentLine = word;\n      }\n  }\n  lines.push(currentLine);\n  return lines;\n}\n\nmodule.exports = TutorialView;"],"sourceRoot":""}